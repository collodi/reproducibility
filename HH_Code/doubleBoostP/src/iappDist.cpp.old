/*
 * iappDist.cpp
 *
 *  Created on: Oct 26, 2016
 *      Author: Wilfredo Blanco
 */
#include <boost/multiprecision/cpp_dec_float.hpp>
#include <boost/math/special_functions/gamma.hpp>


#include <iostream>     // std::cout
#include <fstream>      // std::ofstream


#include <cstdlib>        // RAND_MAX
#include "iappDist.h"

using namespace std;
using namespace boost::multiprecision;

void initUniformSpacedIappValues( std::vector<double> &iapp, double deli, double i0) {
	// Uniformly spaced applied currents Ii in the interval [i0, i0+deli] :
	for (unsigned int n = 0; n < iapp.size(); n++)
		iapp[n] = i0+(n*deli)/(iapp.size()-1);
}

void initRandDistIappValues( std::vector<double> &iapp, double deli, double i0) {
	// Random distribution values in the interval [i0, i0+deli]
	for (unsigned int n = 0; n < iapp.size(); n++)
		iapp[n] = i0+((double)rand()/RAND_MAX)*deli;
}

void initRandIappValues(std::vector<cpp_dec_float_100> &iapp) {

	int numele = iapp.size();
	switch (numele) {
	case 100:
		initRandIappValues_100(iapp);
		break;
	case 200:
		initRandIappValues_200(iapp);
		break;
	case 400:
		initRandIappValues_400(iapp);
		break;
	default:
		return;
	}

	return;
}

// Function to write a .txt

int writeIappToFile (std::vector<cpp_dec_float_100> &iapp, std::string const fileNameStr){

	ofstream myfile(fileNameStr);
	unsigned int nNeurons = iapp.size();

	cout << "Writing in file: "<< fileNameStr << endl;

	myfile.precision(4);								// Adjust precision
	myfile.setf( std::ios::fixed, std:: ios::floatfield );
	if (myfile.is_open())
	{
		for (unsigned int n=0; n<nNeurons;n++) {
			myfile << "iapp[" << n << "]=" << iapp[n] <<";"<<'\n';
		}
		myfile.close();
	} else cout << "Unable to open file: "<< fileNameStr << endl;

	return 0;
}


// Iapp values for 100 neurons
void initRandIappValues_100(std::vector<cpp_dec_float_100> &iapp) {
	// Specific case of Random distribution values in the interval [i0, i0+deli]
	// Fix values for every simulation
	if (iapp.size()!=100)
		return;

	//	0.5000
	//	0.3000
	//	0.1000
	//	-0.1000
	//	-0.3000
	//	-0.5000

	/* VETOR DE-SORDENADO */

	/*
	iapp[0] = -2.18619;
	iapp[1] = -2.57576;
	iapp[2] = -3.41212;
	iapp[3] = -3.71471;
	iapp[4] = -5.39247;
	iapp[5] = 2.96518; // #90 in Matlab => 0.5000
	iapp[6] = 3.7141;
	iapp[7] = 4.12336;
	iapp[8] = 2.06839;
	iapp[9] = -3.20933;
	iapp[10] = -8.78277;
	iapp[11] = -8.15378;
	iapp[12] = 1.66234;
	iapp[13] = -5.6827;
	iapp[14] = -4.08322;
	iapp[15] = -2.69158;
	iapp[16] = -2.59407;
	iapp[17] = -1.73528;
	iapp[18] = 2.83197; // #88 in Matlab => 0.1000
	iapp[19] = 3.40739;
	iapp[20] = -5.76464;
	iapp[21] = -9.56374;
	iapp[22] = -5.77334;
	iapp[23] = 2.82739; //2.82739; // #87 in Matlab => -0.1000
	iapp[24] = -6.84317;
	iapp[25] = -6.86834;
	iapp[26] = -0.258034;
	iapp[27] = -0.471816;
	iapp[28] = -3.84289;
	iapp[29] = -3.70281;
	iapp[30] = -5.67721;
	iapp[31] = 1.8244;
	iapp[32] = -8.66329;
	iapp[33] = 3.99792;
	iapp[34] = -6.82577;
	iapp[35] = -5.59847;
	iapp[36] = 1.23707;
	iapp[37] = -3.68862;
	iapp[38] = -4.54604;
	iapp[39] = 4.11283;
	iapp[40] = -0.170141;
	iapp[41] = 0.237281;
	iapp[42] = -9.07758;
	iapp[43] = -8.10526;
	iapp[44] = -8.86425;
	iapp[45] = -9.28953;
	iapp[46] = -3.72341;
	iapp[47] = 0.655232;
	iapp[48] = -5.05325;
	iapp[49] = -4.68108;
	iapp[50] = -9.62691;
	iapp[51] = -8.53282;
	iapp[52] = -7.38884;
	iapp[53] = 3.81252;
	iapp[54] = 0.0715659;
	iapp[55] = -7.08075;
	iapp[56] = -1.63961;
	iapp[57] = -3.99533;
	iapp[58] = -4.09009;
	iapp[59] = -4.03607;
	iapp[60] = -5.86123;
	iapp[61] = 4.15403;
	iapp[62] = -0.667745;
	iapp[63] = -5.89236;
	iapp[64] = -1.58879;
	iapp[65] = -1.57781;
	iapp[66] = 0.690023;
	iapp[67] = -8.71548;
	iapp[68] = -8.09061;
	iapp[69] = -8.4962;
	iapp[70] = -0.269478;
	iapp[71] = 2.26341;
	iapp[72] = 0.794397;
	iapp[73] = 1.01733;
	iapp[74] = -7.20252;
	iapp[75] = 2.92398; // #89 in Matlab => 0.3000
	iapp[76] = 0.197913;
	iapp[77] = -4.24802;
	iapp[78] = -6.54378;
	iapp[79] = -9.74914;
	iapp[80] = -1.38554;
	iapp[81] = 4.37422;
	iapp[82] = 0.769219;
	iapp[83] = 4.39207;
	iapp[84] = -3.88913;
	iapp[85] = 2.66762; // inh #86 in Matlab => -0.3000
	iapp[86] = 1.93197;
	iapp[87] = 2.61223; // inh #85 in Matlab => -0.5000
	iapp[88] = -3.17728;
	iapp[89] = -2.08136;
	iapp[90] = -1.50227;
	iapp[91] = -7.49413;
	iapp[92] = -6.292;
	iapp[93] = 1.53645;
	iapp[94] = -7.09815;
	iapp[95] = -0.705741;
	iapp[96] = 1.02374;
	iapp[97] = -6.51036;
	iapp[98] = -0.490585;
	iapp[99] = 4.55962;
	*/



	/*VETOR INTERCALADO*/


/*	iapp[0] = -2.18619;
	iapp[1] = 2.96518; 
	iapp[2] = -2.57576;
	iapp[3] = 3.7141;
	iapp[4] = -3.41212;
	iapp[5] = 4.12336;
	iapp[6] = -3.71471;
	iapp[7] = 2.06839;
	iapp[8] = -5.39247;
	iapp[9] = 1.66234;
	
	iapp[10] = -3.20933;
	iapp[11] = 2.83197; 
	iapp[12] = -8.78277;
	iapp[13] = 3.40739;
	iapp[14] = -8.15378;
	iapp[15] = 2.82739; 
	iapp[16] = -5.6827;
	iapp[17] = 4.55962;
	iapp[18] = -4.08322;
	iapp[19] = 1.8244;
	
	iapp[20] = -5.76464;
	iapp[21] = 3.99792;
	iapp[22] = -2.69158;
	iapp[23] = 1.23707;
	iapp[24] = -2.59407;
	iapp[25] = 4.11283;
	iapp[26] = -1.73528;
	iapp[27] = 0.237281;
	iapp[28] = -9.56374;
	iapp[29] = 0.655232;
	
	iapp[30] = -5.77334;
	iapp[31] = 3.81252;
	iapp[32] = -6.84317;
	iapp[33] = 0.0715659;
	iapp[34] = -6.86834;
	iapp[35] = 4.15403;
	iapp[36] = -0.258034;
	iapp[37] = 0.690023;
	iapp[38] = -0.471816;
	iapp[39] = 2.26341;
	
	iapp[40] = -3.84289;
	iapp[41] = 0.794397;
	iapp[42] = -3.70281;
	iapp[43] = 1.01733;
	iapp[44] = -5.67721;
	iapp[45] = 2.92398; 
	iapp[46] = -8.66329;
	iapp[47] = 0.197913;
	iapp[48] = -6.82577;
	iapp[49] = 4.37422;
	
	iapp[50] = -5.59847;
	iapp[51] = 0.769219;
	iapp[52] = -3.68862;
	iapp[53] = 4.39207;
	iapp[54] = -4.54604;
	iapp[55] = 2.66762; 
	iapp[56] = -0.170141;
	iapp[57] = 1.93197;
	iapp[58] = -9.07758;
	iapp[59] = 2.61223; 
	
	iapp[60] = -8.10526;
	iapp[61] = 1.53645;
	iapp[62] = -8.86425;
	iapp[63] = 1.02374;		//  Valores Positivos vem at√© aqui
	iapp[64] = -9.28953;
	iapp[65] = -6.51036;	
	iapp[66] = -3.72341;
	iapp[67] = -5.05325;
	iapp[68] = -4.68108;
	iapp[69] = -9.62691;

	iapp[70] = -0.269478;	
	iapp[71] = -3.99533;
	iapp[72] = -4.09009;
	iapp[73] = -4.03607;
	iapp[74] = -7.20252;
	iapp[75] = -8.4962;
	iapp[76] = -8.09061;
	iapp[77] = -4.24802;
	iapp[78] = -6.54378;
	iapp[79] = -9.74914;
	
	iapp[80] = -1.38554;
	iapp[81] = -8.53282;	
	iapp[82] = -5.86123;
	iapp[83] = -0.667745;
	iapp[84] = -3.88913;
	iapp[85] = -5.89236;
	iapp[86] = -1.58879;
	iapp[87] = -1.57781;
	iapp[88] = -3.17728;
	iapp[89] = -8.71548;	
	
	iapp[90] = -1.50227;
	iapp[91] = -7.49413;
	iapp[92] = -6.292;
	iapp[93] = -2.08136;
	iapp[94] = -7.09815;
	iapp[95] = -0.705741;
	iapp[96] = -7.38884;	
	iapp[97] = -7.08075;
	iapp[98] = -0.490585;
	iapp[99] = -1.63961;
	*/

	/* VETOR ORDENADO */

	iapp[0] = -9.749140;
	iapp[1] = -9.626910;
	iapp[2] = -9.563740;
	iapp[3] = -9.289530;
	iapp[4] = -9.077580;
	iapp[5] = -8.864250;
	iapp[6] = -8.782770;
	iapp[7] = -8.715480;
	iapp[8] = -8.663290;
	iapp[9] = -8.532820;
	iapp[10] = -8.496200;
	iapp[11] = -8.153780;
	iapp[12] = -8.105260;
	iapp[13] = -8.090610;
	iapp[14] = -7.494130;
	iapp[15] = -7.388840;
	iapp[16] = -7.202520;
	iapp[17] = -7.098150;
	iapp[18] = -7.080750;
	iapp[19] = -6.868340;
	iapp[20] = -6.843170;
	iapp[21] = -6.825770;
	iapp[22] = -6.543780;
	iapp[23] = -6.510360;
	iapp[24] = -6.292000;
	iapp[25] = -5.892360;
	iapp[26] = -5.861230;
	iapp[27] = -5.773340;
	iapp[28] = -5.764640;
	iapp[29] = -5.682700;
	iapp[30] = -5.677210;
	iapp[31] = -5.598470;
	iapp[32] = -5.392470;
	iapp[33] = -5.053250;
	iapp[34] = -4.681080;
	iapp[35] = -4.546040;
	iapp[36] = -4.248020;
	iapp[37] = -4.090090;
	iapp[38] = -4.083220;
	iapp[39] = -4.036070;
	iapp[40] = -3.995330;
	iapp[41] = -3.889130;
	iapp[42] = -3.842890;
	iapp[43] = -3.723410;
	iapp[44] = -3.714710;
	iapp[45] = -3.702810;
	iapp[46] = -3.688620;
	iapp[47] = -3.412120;
	iapp[48] = -3.209330;
	iapp[49] = -3.177280;
	iapp[50] = -2.691580;
	iapp[51] = -2.594070;
	iapp[52] = -2.575760;
	iapp[53] = -2.186190;
	iapp[54] = -2.081360;
	iapp[55] = -1.735280;
	iapp[56] = -1.639610;
	iapp[57] = -1.588790;
	iapp[58] = -1.577810;
	iapp[59] = -1.502270;
	iapp[60] = -1.385540;
	iapp[61] = -0.705741;
	iapp[62] = -0.667745;
	iapp[63] = -0.490585;
	iapp[64] = -0.471816;
	iapp[65] = -0.269478;
	iapp[66] = -0.258034;
	iapp[67] = -0.170141;
	iapp[68] = 0.071566;
	iapp[69] = 0.197913;
	iapp[70] = 0.237281;
	iapp[71] = 0.655232;
	iapp[72] = 0.690023;
	iapp[73] = 0.769219;
	iapp[74] = 0.794397;
	iapp[75] = 1.017330;
	iapp[76] = 1.023740;
	iapp[77] = 1.237070;
	iapp[78] = 1.536450;
	iapp[79] = 1.662340;
	iapp[80] = 1.824400;
	iapp[81] = 1.931970;
	iapp[82] = 2.068390;
	iapp[83] = 2.263410;
	iapp[84] = 2.612230;
	iapp[85] = 2.667620;
	iapp[86] = 2.827390;
	iapp[87] = 2.831970;
	iapp[88] = 2.923980;
	iapp[89] = 2.965180;
	iapp[90] = 3.407390;
	iapp[91] = 3.714100;
	iapp[92] = 3.812520;
	iapp[93] = 3.997920;
	iapp[94] = 4.112830;
	iapp[95] = 4.123360;
	iapp[96] = 4.154030;
	iapp[97] = 4.374220;
	iapp[98] = 4.392070;
	iapp[99] = 4.559620;
	
}


void initRandIappValues_200(std::vector<cpp_dec_float_100> &iapp) {

	if (iapp.size()!=200)
		return;

	iapp[0]=-0.1549;
	iapp[1]=-3.2463;
	iapp[2]=-5.1213;
	iapp[3]=-5.8721;
	iapp[4]=-7.5278;
	iapp[5]=-4.2332;
	iapp[6]=-6.4090;
	iapp[7]=-8.5679;
	iapp[8]=3.1590;
	iapp[9]=-7.8478;
	iapp[10]=-9.6222;
	iapp[11]=-5.5997;
	iapp[12]=-4.2204;
	iapp[13]=5.1714;
	iapp[14]=-7.6991;
	iapp[15]=4.8253;
	iapp[16]=-6.4695;
	iapp[17]=-7.9801;
	iapp[18]=-5.0861;
	iapp[19]=-7.8932;
	iapp[20]=2.7240;
	iapp[21]=3.9221;
	iapp[22]=3.3737;
	iapp[23]=-3.2005;
	iapp[24]=-4.4713;
	iapp[25]=-3.2247;
	iapp[26]=-5.1332;
	iapp[27]=5.1993;
	iapp[28]=-2.4200;
	iapp[29]=-3.7956;
	iapp[30]=2.9285;
	iapp[31]=-1.4275;
	iapp[32]=-7.3310;
	iapp[33]=4.3638;
	iapp[34]=0.9113;
	iapp[35]=3.1959;
	iapp[36]=-6.7615;
	iapp[37]=3.3288;
	iapp[38]=-7.8172;
	iapp[39]=4.2434;
	iapp[40]=-8.3042;
	iapp[41]=-2.5751;
	iapp[42]=-3.4843;
	iapp[43]=1.2926;
	iapp[44]=0.6719;
	iapp[45]=-0.6635;
	iapp[46]=-3.3634;
	iapp[47]=-8.7561;
	iapp[48]=-8.7675;
	iapp[49]=-7.6643;
	iapp[50]=0.8115;
	iapp[51]=-7.4500;
	iapp[52]=-4.2264;
	iapp[53]=-1.5177;
	iapp[54]=-2.3733;
	iapp[55]=2.8623; //2.6623;
	iapp[56]=4.8083;
	iapp[57]=0.1285;
	iapp[58]=-9.1612;
	iapp[59]=0.3560;
	iapp[60]=-0.6273;
	iapp[61]=-5.4143;
	iapp[62]=-5.2353;
	iapp[63]=-8.5588;
	iapp[64]=3.2620;
	iapp[65]=4.2828;
	iapp[66]=-1.8294;
	iapp[67]=-1.0402;
	iapp[68]=1.8241;
	iapp[69]=-7.7334;
	iapp[70]=2.6445;
	iapp[71]=-3.5466;
	iapp[72]=1.5188;
	iapp[73]=0.3945;
	iapp[74]=4.9045;
	iapp[75]=0.4068;
	iapp[76]=1.9733;
	iapp[77]=-4.9533;
	iapp[78]=-5.9760;
	iapp[79]=-9.5498;
	iapp[80]=4.7420;
	iapp[81]=-7.2806;
	iapp[82]=-0.9642;
	iapp[83]=-6.5766;
	iapp[84]=-4.5038;
	iapp[85]=-4.6690;
	iapp[86]=-5.1140;
	iapp[87]=-0.1132;
	iapp[88]=-6.1389;
	iapp[89]=-7.4107;
	iapp[90]=-5.7942;
	iapp[91]=4.1798;
	iapp[92]=2.9151;
	iapp[93]=-3.7356;
	iapp[94]=-1.1286;
	iapp[95]=1.6186;
	iapp[96]=-4.5253;
	iapp[97]=3.7069;
	iapp[98]=-1.1812;
	iapp[99]=-6.0753;
	iapp[100]=0.1853;
	iapp[101]=-9.5389;
	iapp[102]=3.5856;
	iapp[103]=1.4794;
	iapp[104]=-3.8739;
	iapp[105]=-5.6880;
	iapp[106]=-5.4587;
	iapp[107]=-1.4998;
	iapp[108]=-1.8363;
	iapp[109]=0.6110;
	iapp[110]=-6.7148;
	iapp[111]=-5.2719;
	iapp[112]=0.9571;
	iapp[113]=-8.7744;
	iapp[114]=-0.8283;
	iapp[115]=-0.2744;
	iapp[116]=-9.5540;
	iapp[117]=1.9578;
	iapp[118]=-8.5652;
	iapp[119]=3.3732;
	iapp[120]=-3.2655;
	iapp[121]=-4.2318;
	iapp[122]=3.8864;
	iapp[123]=-6.3390;
	iapp[124]=5.0848;
	iapp[125]=-3.3415;
	iapp[126]=2.6417;
	iapp[127]=-4.6278;
	iapp[128]=-0.7472;
	iapp[129]=-8.4489;
	iapp[130]=-5.1387;
	iapp[131]=0.7437;
	iapp[132]=-1.1267;
	iapp[133]=0.0099;
	iapp[134]=-6.0387;
	iapp[135]=0.7067;
	iapp[136]=5.1128;
	iapp[137]=-0.8534;
	iapp[138]=-0.7312;
	iapp[139]=2.8978;
	iapp[140]=1.3173;
	iapp[141]=-1.4435;
	iapp[142]=-9.4139;
	iapp[143]=4.3300;
	iapp[144]=-2.1302;
	iapp[145]=-2.3714;
	iapp[146]=-9.3544;
	iapp[147]=1.9243;
	iapp[148]=-2.0290;
	iapp[149]=0.0703;
	iapp[150]=0.9003;
	iapp[151]=-9.0078;
	iapp[152]=-6.4324;
	iapp[153]=-2.0070;
	iapp[154]=-1.3561;
	iapp[155]=-8.7391;
	iapp[156]=3.2521;
	iapp[157]=-4.5949;
	iapp[158]=-4.0867;
	iapp[159]=-8.0602;
	iapp[160]=-9.3654;
	iapp[161]=-1.5511;
	iapp[162]=3.1948;
	iapp[163]=2.6188;
	iapp[164]=-7.9682;
	iapp[165]=-2.7697;
	iapp[166]=3.0711;
	iapp[167]=-1.5104;
	iapp[168]=4.1643;
	iapp[169]=1.5865;
	iapp[170]=2.9712;
	iapp[171]=-9.0065;
	iapp[172]=-7.8982;
	iapp[173]=-9.3690;
	iapp[174]=-0.5628;
	iapp[175]=-2.5230;
	iapp[176]=4.5666;
	iapp[177]=3.4217;
	iapp[178]=2.7300;
	iapp[179]=-9.0445;
	iapp[180]=4.0109;
	iapp[181]=-9.4056;
	iapp[182]=-5.7480;
	iapp[183]=-6.4177;
	iapp[184]=0.5959;
	iapp[185]=-0.6877;
	iapp[186]=-2.9139;
	iapp[187]=4.9068;
	iapp[188]=-8.2186;
	iapp[189]=-3.6386;
	iapp[190]=0.8683;
	iapp[191]=3.5270;
	iapp[192]=-3.2472;
	iapp[193]=-8.2479;
	iapp[194]=-9.6295;
	iapp[195]=-1.7800;
	iapp[196]=2.6995;
	iapp[197]=-7.3424;
	iapp[198]=3.2564;
	iapp[199]=-7.8492;

}

void initRandIappValues_400(std::vector<cpp_dec_float_100> &iapp) {

	if (iapp.size()!=400)
		return;
	iapp[0]=1.3948;
	iapp[1]=-0.0533;
	iapp[2]=-1.1588;
	iapp[3]=3.1054;
	iapp[4]=-7.4457;
	iapp[5]=-8.4418;
	iapp[6]=-7.2289;
	iapp[7]=-3.7029;
	iapp[8]=3.7751;
	iapp[9]=-2.7504;
	iapp[10]=-7.7540;
	iapp[11]=1.0101;
	iapp[12]=0.9533;
	iapp[13]=3.0139;
	iapp[14]=0.0206;
	iapp[15]=-3.1570;
	iapp[16]=-4.1258;
	iapp[17]=1.6274;
	iapp[18]=4.1854;
	iapp[19]=-9.9934;
	iapp[20]=-6.4116;
	iapp[21]=2.6918;
	iapp[22]=-6.1122;
	iapp[23]=-7.5610;
	iapp[24]=-5.0331;
	iapp[25]=-9.9594;
	iapp[26]=-8.9739;
	iapp[27]=-0.1943;
	iapp[28]=-6.2712;
	iapp[29]=-8.7320;
	iapp[30]=-7.0941;
	iapp[31]=-9.8764;
	iapp[32]=1.2147;
	iapp[33]=1.7471;
	iapp[34]=3.2290;
	iapp[35]=3.7690;
	iapp[36]=3.3053;
	iapp[37]=-8.9999;
	iapp[38]=-4.9339;
	iapp[39]=2.0804;
	iapp[40]=-1.7504;
	iapp[41]=-2.6879;
	iapp[42]=-1.9095;
	iapp[43]=-5.7971;
	iapp[44]=-4.6741;
	iapp[45]=-6.8888;
	iapp[46]=1.0459;
	iapp[47]=1.2002;
	iapp[48]=4.7386;
	iapp[49]=0.2313;
	iapp[50]=1.2068;
	iapp[51]=-6.6730;
	iapp[52]=-2.0769;
	iapp[53]=-9.9054;
	iapp[54]=-4.2340;
	iapp[55]=2.8900;
	iapp[56]=-9.8648;
	iapp[57]=-3.2079;
	iapp[58]=-2.3043;
	iapp[59]=-6.1360;
	iapp[60]=-1.9399;
	iapp[61]=0.6016;
	iapp[62]=-6.0123;
	iapp[63]=-5.7252;
	iapp[64]=-2.6513;
	iapp[65]=-7.7833;
	iapp[66]=-6.9563;
	iapp[67]=-4.3459;
	iapp[68]=-6.7832;
	iapp[69]=-1.8902;
	iapp[70]=-7.2655;
	iapp[71]=1.4664;
	iapp[72]=-9.5781;
	iapp[73]=0.8250;
	iapp[74]=-9.3306;
	iapp[75]=-4.2522;
	iapp[76]=3.9362;
	iapp[77]=1.7153;
	iapp[78]=-8.0520;
	iapp[79]=3.6748;
	iapp[80]=-3.0534;
	iapp[81]=3.1548;
	iapp[82]=-7.9982;
	iapp[83]=4.8696;
	iapp[84]=3.2494;
	iapp[85]=-2.2322;
	iapp[86]=2.7596;
	iapp[87]=3.3846;
	iapp[88]=4.5599;
	iapp[89]=-4.5447;
	iapp[90]=-7.7514;
	iapp[91]=-2.3800;
	iapp[92]=-8.9431;
	iapp[93]=-3.7637;
	iapp[94]=1.8947;
	iapp[95]=-1.5944;
	iapp[96]=-1.5470;
	iapp[97]=4.9385;
	iapp[98]=4.0597;
	iapp[99]=1.6697;
	iapp[100]=-1.9517;
	iapp[101]=-8.2058;
	iapp[102]=-1.8638;
	iapp[103]=-1.5298;
	iapp[104]=2.6192;
	iapp[105]=-1.1944;
	iapp[106]=4.2180;
	iapp[107]=1.5554;
	iapp[108]=-4.4792;
	iapp[109]=-8.8339;
	iapp[110]=0.2302;
	iapp[111]=2.4674;
	iapp[112]=4.3208;
	iapp[113]=2.2321;
	iapp[114]=2.3370;
	iapp[115]=2.5702;
	iapp[116]=-5.0002;
	iapp[117]=0.0966;
	iapp[118]=0.9548;
	iapp[119]=-5.4403;
	iapp[120]=-9.4482;
	iapp[121]=3.2034;
	iapp[122]=2.1797;
	iapp[123]=-8.3913;
	iapp[124]=-5.5603;
	iapp[125]=-0.9256;
	iapp[126]=0.0143;
	iapp[127]=2.8926;
	iapp[128]=-0.9871;
	iapp[129]=-0.9260;
	iapp[130]=-0.4376;
	iapp[131]=-7.9388;
	iapp[132]=0.8682;
	iapp[133]=-7.3014;
	iapp[134]=0.5315;
	iapp[135]=-1.5125;
	iapp[136]=1.5041;
	iapp[137]=-0.2505;
	iapp[138]=-4.9571;
	iapp[139]=-7.9751;
	iapp[140]=0.9156;
	iapp[141]=-9.7268;
	iapp[142]=4.4923;
	iapp[143]=0.2364;
	iapp[144]=2.5052;
	iapp[145]=1.8293;
	iapp[146]=-2.1934;
	iapp[147]=-7.4949;
	iapp[148]=-3.0741;
	iapp[149]=-6.2386;
	iapp[150]=-2.9352;
	iapp[151]=-2.5223;
	iapp[152]=-8.0351;
	iapp[153]=-5.7555;
	iapp[154]=-0.9135;
	iapp[155]=-3.5955;
	iapp[156]=3.3189;
	iapp[157]=-5.8992;
	iapp[158]=-5.7028;
	iapp[159]=-2.6682;
	iapp[160]=3.1748;
	iapp[161]=3.8595;
	iapp[162]=-0.6069;
	iapp[163]=-0.9569;
	iapp[164]=-8.4419;
	iapp[165]=-5.0755;
	iapp[166]=-7.4695;
	iapp[167]=3.0622;
	iapp[168]=4.6740;
	iapp[169]=-2.4266;
	iapp[170]=-9.9129;
	iapp[171]=0.5896;
	iapp[172]=-2.1534;
	iapp[173]=4.5794;
	iapp[174]=-4.1740;
	iapp[175]=-4.6482;
	iapp[176]=1.4087;
	iapp[177]=3.6326;
	iapp[178]=-2.1432;
	iapp[179]=-6.6654;
	iapp[180]=-7.6059;
	iapp[181]=4.9216;
	iapp[182]=0.8124;
	iapp[183]=-5.6411;
	iapp[184]=-5.8339;
	iapp[185]=-5.1012;
	iapp[186]=0.7635;
	iapp[187]=-7.5150;
	iapp[188]=-1.0004;
	iapp[189]=-9.9394;
	iapp[190]=-0.1831;
	iapp[191]=-2.8256;
	iapp[192]=3.9202;
	iapp[193]=-5.7900;
	iapp[194]=-8.7825;
	iapp[195]=-9.5217;
	iapp[196]=-0.8655;
	iapp[197]=-6.2520;
	iapp[198]=3.5405;
	iapp[199]=-1.1915;
	iapp[200]=1.3214;
	iapp[201]=3.6276;
	iapp[202]=-5.6019;
	iapp[203]=-5.8320;
	iapp[204]=3.2071;
	iapp[205]=0.2241;
	iapp[206]=-0.4802;
	iapp[207]=-0.3842;
	iapp[208]=-1.1433;
	iapp[209]=-7.6234;
	iapp[210]=2.9504;
	iapp[211]=1.2508;
	iapp[212]=-7.7017;
	iapp[213]=-1.2372;
	iapp[214]=-9.3903;
	iapp[215]=-3.5356;
	iapp[216]=3.6616;
	iapp[217]=1.3732;
	iapp[218]=-1.0506;
	iapp[219]=-2.3388;
	iapp[220]=1.4338;
	iapp[221]=-6.2337;
	iapp[222]=4.8356;
	iapp[223]=0.3540;
	iapp[224]=-2.0238;
	iapp[225]=-8.9469;
	iapp[226]=0.8323;
	iapp[227]=-7.8893;
	iapp[228]=-5.1989;
	iapp[229]=-0.6273;
	iapp[230]=0.9192;
	iapp[231]=-8.8775;
	iapp[232]=-1.9997;
	iapp[233]=-9.6827;
	iapp[234]=-4.7094;
	iapp[235]=-3.7926;
	iapp[236]=0.5415;
	iapp[237]=4.8104;
	iapp[238]=-9.1768;
	iapp[239]=-5.6018;
	iapp[240]=-7.8130;
	iapp[241]=3.7736;
	iapp[242]=-9.3510;
	iapp[243]=-5.5147;
	iapp[244]=-2.4636;
	iapp[245]=-8.7413;
	iapp[246]=0.9496;
	iapp[247]=-3.8020;
	iapp[248]=2.6319;
	iapp[249]=-5.1010;
	iapp[250]=3.8592;
	iapp[251]=-0.9343;
	iapp[252]=-1.3347;
	iapp[253]=3.6949;
	iapp[254]=-5.5804;
	iapp[255]=-8.3585;
	iapp[256]=4.7480;
	iapp[257]=-9.7481;
	iapp[258]=-6.2478;
	iapp[259]=-5.4509;
	iapp[260]=-0.3754;
	iapp[261]=4.6714;
	iapp[262]=-4.3284;
	iapp[263]=-7.3750;
	iapp[264]=4.9887;
	iapp[265]=0.9622;
	iapp[266]=-1.1676;
	iapp[267]=0.5302;
	iapp[268]=0.7725;
	iapp[269]=-0.3444;
	iapp[270]=4.9284;
	iapp[271]=2.9595;
	iapp[272]=-1.5708;
	iapp[273]=-9.4227;
	iapp[274]=-7.5552;
	iapp[275]=-9.0343;
	iapp[276]=-8.1640;
	iapp[277]=3.3944;
	iapp[278]=-2.8363;
	iapp[279]=4.4679;
	iapp[280]=-6.7066;
	iapp[281]=-3.9771;
	iapp[282]=-1.4665;
	iapp[283]=1.9587;
	iapp[284]=-5.2822;
	iapp[285]=2.9532;
	iapp[286]=3.6001;
	iapp[287]=-5.5343;
	iapp[288]=3.2051;
	iapp[289]=-7.6477;
	iapp[290]=-0.9852;
	iapp[291]=-2.1703;
	iapp[292]=-7.9763;
	iapp[293]=4.6864;
	iapp[294]=0.4547;
	iapp[295]=-7.9875;
	iapp[296]=0.6486;
	iapp[297]=-5.7129;
	iapp[298]=2.5427;
	iapp[299]=-3.5788;
	iapp[300]=3.9427;
	iapp[301]=2.4710;
	iapp[302]=-5.6193;
	iapp[303]=-2.6281;
	iapp[304]=3.0484;
	iapp[305]=-3.1745;
	iapp[306]=-1.6624;
	iapp[307]=4.8844;
	iapp[308]=-4.7801;
	iapp[309]=-9.4987;
	iapp[310]=4.3522;
	iapp[311]=-1.4867;
	iapp[312]=-3.4757;
	iapp[313]=-2.1142;
	iapp[314]=-4.5280;
	iapp[315]=1.2420;
	iapp[316]=-4.1611;
	iapp[317]=-5.9279;
	iapp[318]=-9.2922;
	iapp[319]=-5.9560;
	iapp[320]=-3.5756;
	iapp[321]=-0.2774;
	iapp[322]=1.8737;
	iapp[323]=-1.5519;
	iapp[324]=-0.5909;
	iapp[325]=-2.6716;
	iapp[326]=0.4606;
	iapp[327]=-4.9423;
	iapp[328]=1.6155;
	iapp[329]=-1.9967;
	iapp[330]=1.4789;
	iapp[331]=0.5582;
	iapp[332]=-4.5257;
	iapp[333]=-9.1405;
	iapp[334]=-7.0698;
	iapp[335]=-6.4774;
	iapp[336]=-2.3150;
	iapp[337]=1.2678;
	iapp[338]=-6.5930;
	iapp[339]=2.9049;
	iapp[340]=1.7691;
	iapp[341]=-7.2408;
	iapp[342]=-3.5818;
	iapp[343]=-6.7066;
	iapp[344]=0.6450;
	iapp[345]=1.8901;
	iapp[346]=4.5354;
	iapp[347]=-8.5161;
	iapp[348]=-9.0378;
	iapp[349]=-9.7568;
	iapp[350]=-4.4721;
	iapp[351]=-2.6134;
	iapp[352]=-0.0342;
	iapp[353]=-7.5984;
	iapp[354]=-9.1652;
	iapp[355]=-5.6252;
	iapp[356]=-0.2700;
	iapp[357]=1.2954;
	iapp[358]=-0.5675;
	iapp[359]=-3.6545;
	iapp[360]=-5.7014;
	iapp[361]=-4.0886;
	iapp[362]=-8.0962;
	iapp[363]=-0.2271;
	iapp[364]=-3.2291;
	iapp[365]=-5.1661;
	iapp[366]=3.2955;
	iapp[367]=4.4559;
	iapp[368]=-8.8983;
	iapp[369]=-8.2975;
	iapp[370]=2.3608;
	iapp[371]=2.8708;
	iapp[372]=-5.5383;
	iapp[373]=-6.2210;
	iapp[374]=-8.8358;
	iapp[375]=-9.8933;
	iapp[376]=-9.3309;
	iapp[377]=-9.3004;
	iapp[378]=-8.4094;
	iapp[379]=-8.3687;
	iapp[380]=-9.0572;
	iapp[381]=-2.8816;
	iapp[382]=-0.9821;
	iapp[383]=0.9085;
	iapp[384]=-0.4799;
	iapp[385]=-0.1473;
	iapp[386]=-9.7166;
	iapp[387]=-5.7499;
	iapp[388]=-3.8519;
	iapp[389]=-0.2841;
	iapp[390]=0.5956;
	iapp[391]=0.4467;
	iapp[392]=-9.3727;
	iapp[393]=2.4994;
	iapp[394]=-4.7804;
	iapp[395]=-2.6018;
	iapp[396]=-7.6667;
	iapp[397]=-6.4849;
	iapp[398]=-3.1458;
	iapp[399]=-6.5650;

}


void initRandIappValues_old( std::vector<cpp_dec_float_100> &iapp) {
	// Specific case of Random distribution values in the interval [i0, i0+deli]
	// Fix values for every simulation

	iapp[0] = -2.18619;
	iapp[1] = -2.57576;
	iapp[2] = -3.41212;
	iapp[3] = -3.71471;
	iapp[4] = -5.39247;
	iapp[5] = 2.96518;
	iapp[6] = 3.7141;
	iapp[7] = 4.12336;
	iapp[8] = 2.06839;
	iapp[9] = -3.20933;
	iapp[10] = -8.78277;
	iapp[11] = -8.15378;
	iapp[12] = 1.66234;
	iapp[13] = -5.6827;
	iapp[14] = -4.08322;
	iapp[15] = -2.69158;
	iapp[16] = -2.59407;
	iapp[17] = -1.73528;
	iapp[18] = 2.83197;
	iapp[19] = 3.40739;
	iapp[20] = -5.76464;
	iapp[21] = -9.56374;
	iapp[22] = -5.77334;
	iapp[23] = 2.82739;
	iapp[24] = -6.84317;
	iapp[25] = -6.86834;
	iapp[26] = -0.258034;
	iapp[27] = -0.471816;
	iapp[28] = -3.84289;
	iapp[29] = -3.70281;
	iapp[30] = -5.67721;
	iapp[31] = 1.8244;
	iapp[32] = -8.66329;
	iapp[33] = 3.99792;
	iapp[34] = -6.82577;
	iapp[35] = -5.59847;
	iapp[36] = 1.23707;
	iapp[37] = -3.68862;
	iapp[38] = -4.54604;
	iapp[39] = 4.11283;
	iapp[40] = -0.170141;
	iapp[41] = 0.237281;
	iapp[42] = -9.07758;
	iapp[43] = -8.10526;
	iapp[44] = -8.86425;
	iapp[45] = -9.28953;
	iapp[46] = -3.72341;
	iapp[47] = 0.655232;
	iapp[48] = -5.05325;
	iapp[49] = -4.68108;
	iapp[50] = -9.62691;
	iapp[51] = -8.53282;
	iapp[52] = -7.38884;
	iapp[53] = 3.81252;
	iapp[54] = 0.0715659;
	iapp[55] = -7.08075;
	iapp[56] = -1.63961;
	iapp[57] = -3.99533;
	iapp[58] = -4.09009;
	iapp[59] = -4.03607;
	iapp[60] = -5.86123;
	iapp[61] = 4.15403;
	iapp[62] = -0.667745;
	iapp[63] = -5.89236;
	iapp[64] = -1.58879;
	iapp[65] = -1.57781;
	iapp[66] = 0.690023;
	iapp[67] = -8.71548;
	iapp[68] = -8.09061;
	iapp[69] = -8.4962;
	iapp[70] = -0.269478;
	iapp[71] = 2.26341;
	iapp[72] = 0.794397;
	iapp[73] = 1.01733;
	iapp[74] = -7.20252;
	iapp[75] = 2.92398;
	iapp[76] = 0.197913;
	iapp[77] = -4.24802;
	iapp[78] = -6.54378;
	iapp[79] = -9.74914;
	iapp[80] = -1.38554;
	iapp[81] = 4.37422;
	iapp[82] = 0.769219;
	iapp[83] = 4.39207;
	iapp[84] = -3.88913;
	iapp[85] = 2.66762;
	iapp[86] = 1.93197;
	iapp[87] = 2.61223;
	iapp[88] = -3.17728;
	iapp[89] = -2.08136;
	iapp[90] = -1.50227;
	iapp[91] = -7.49413;
	iapp[92] = -6.292;
	iapp[93] = 1.53645;
	iapp[94] = -7.09815;
	iapp[95] = -0.705741;
	iapp[96] = 1.02374;
	iapp[97] = -6.51036;
	iapp[98] = -0.490585;
	iapp[99] = 4.55962;

	//for (int n = 0; n < nNeurons; n++)
	//		iapp[n] = iapp[n]+5;


	// The same previous values but sorted asc from 0-79 indexes  the rest 80-99 are the same values and order
	//	iapp[0]=-9.7491;
	//	iapp[1]=-9.6269;
	//	iapp[2]=-9.5637;
	//	iapp[3]=-9.2895;
	//	iapp[4]=-9.0776;
	//	iapp[5]=-8.8643;
	//	iapp[6]=-8.7828;
	//	iapp[7]=-8.7155;
	//	iapp[8]=-8.6633;
	//	iapp[9]=-8.5328;
	//	iapp[10]=-8.4962;
	//	iapp[11]=-8.1538;
	//	iapp[12]=-8.1053;
	//	iapp[13]=-8.0906;
	//	iapp[14]=-7.3888;
	//	iapp[15]=-7.2025;
	//	iapp[16]=-7.0808;
	//	iapp[17]=-6.8683;
	//	iapp[18]=-6.8432;
	//	iapp[19]=-6.8258;
	//	iapp[20]=-6.5438;
	//	iapp[21]=-5.8924;
	//	iapp[22]=-5.8612;
	//	iapp[23]=-5.7733;
	//	iapp[24]=-5.7646;
	//	iapp[25]=-5.6827;
	//	iapp[26]=-5.6772;
	//	iapp[27]=-5.5985;
	//	iapp[28]=-5.3925;
	//	iapp[29]=-5.0533;
	//	iapp[30]=-4.6811;
	//	iapp[31]=-4.546;
	//	iapp[32]=-4.248;
	//	iapp[33]=-4.0901;
	//	iapp[34]=-4.0832;
	//	iapp[35]=-4.0361;
	//	iapp[36]=-3.9953;
	//	iapp[37]=-3.8429;
	//	iapp[38]=-3.7234;
	//	iapp[39]=-3.7147;
	//	iapp[40]=-3.7028;
	//	iapp[41]=-3.6886;
	//	iapp[42]=-3.4121;
	//	iapp[43]=-3.2093;
	//	iapp[44]=-2.6916;
	//	iapp[45]=-2.5941;
	//	iapp[46]=-2.5758;
	//	iapp[47]=-2.1862;
	//	iapp[48]=-1.7353;
	//	iapp[49]=-1.6396;
	//	iapp[50]=-1.5888;
	//	iapp[51]=-1.5778;
	//	iapp[52]=-0.66775;
	//	iapp[53]=-0.47182;
	//	iapp[54]=-0.26948;
	//	iapp[55]=-0.25803;
	//	iapp[56]=-0.17014;
	//	iapp[57]=0.071566;
	//	iapp[58]=0.19791;
	//	iapp[59]=0.23728;
	//	iapp[60]=0.65523;
	//	iapp[61]=0.69002;
	//	iapp[62]=0.7944;
	//	iapp[63]=1.0173;
	//	iapp[64]=1.2371;
	//	iapp[65]=1.6623;
	//	iapp[66]=1.8244;
	//	iapp[67]=2.0684;
	//	iapp[68]=2.2634;
	//	iapp[69]=2.8274;
	//	iapp[70]=2.832;
	//	iapp[71]=2.924;
	//	iapp[72]=2.9652;
	//	iapp[73]=3.4074;
	//	iapp[74]=3.7141;
	//	iapp[75]=3.8125;
	//	iapp[76]=3.9979;
	//	iapp[77]=4.1128;
	//	iapp[78]=4.1234;
	//	iapp[79]=4.154;
	//	iapp[80]=-1.38554;
	//	iapp[81]=4.37422;
	//	iapp[82]=0.769219;
	//	iapp[83]=4.39207;
	//	iapp[84]=-3.88913;
	//	iapp[85]=2.66762;
	//	iapp[86]=1.93197;
	//	iapp[87]=2.61223;
	//	iapp[88]=-3.17728;
	//	iapp[89]=-2.08136;
	//	iapp[90]=-1.50227;
	//	iapp[91]=-7.49413;
	//	iapp[92]=-6.292;
	//	iapp[93]=1.53645;
	//	iapp[94]=-7.09815;
	//	iapp[95]=-0.705741;
	//	iapp[96]=1.02374;
	//	iapp[97]=-6.51036;
	//	iapp[98]=-0.490585;
	//	iapp[99]=4.55962;

	// In case the simulation have narrow range for the
	// inhibitory neurons [-0.5 .. 0.5]
//	iapp_i[0] = 0.35071;
//	iapp_i[1] = 0.06056;
//	iapp_i[2] = 0.42961;
//	iapp_i[3] = 0.19667;
//	iapp_i[4] = 0.082791;
//	iapp_i[5] = 0.3154;
//	iapp_i[6] = 0.37901;
//	iapp_i[7] = 0.48891;
//	iapp_i[8] = -0.49948;
//	iapp_i[9] = 0.36544;
//	iapp_i[10] = 0.11257;
//	iapp_i[11] = 0.48995;
//	iapp_i[12] = 0.02768;
//	iapp_i[13] = -0.020477;
//	iapp_i[14] = 0.30135;
//	iapp_i[15] = -0.27216;
//	iapp_i[16] = -0.0019057;
//	iapp_i[17] = 0.40085;
//	iapp_i[18] = 0.074661;
//	iapp_i[19] = 0.34518;
//	iapp_i[20] = 0.23864;
//	iapp_i[21] = 0.085987;
//	iapp_i[22] = -0.25327;
//	iapp_i[23] = 0.16642;
//	iapp_i[24] = -0.41652;
//	iapp_i[25] = 0.12596;
//	iapp_i[26] = 0.16094;
//	iapp_i[27] = 0.22975;
//	iapp_i[28] = 0.39075;
//	iapp_i[29] = 0.4823;
//	iapp_i[30] = 0.26903;
//	iapp_i[31] = 0.081446;
//	iapp_i[32] = 0.42831;
//	iapp_i[33] = 0.08009;
//	iapp_i[34] = -0.48302;
//	iapp_i[35] = -0.37914;
//	iapp_i[36] = 0.36271;
//	iapp_i[37] = -0.015703;
//	iapp_i[38] = 0.34486;
//	iapp_i[39] = -0.29059;
//	iapp_i[40] = 0.052291;
//	iapp_i[41] = 0.12988;
//	iapp_i[42] = -0.46801;
//	iapp_i[43] = 0.11471;
//	iapp_i[44] = -0.13759;
//	iapp_i[45] = -0.45047;
//	iapp_i[46] = -0.01043;
//	iapp_i[47] = -0.30749;
//	iapp_i[48] = -0.37692;
//	iapp_i[49] = -0.29451;
//	iapp_i[50] = -0.35349;
//	iapp_i[51] = -0.31093;
//	iapp_i[52] = -0.45735;
//	iapp_i[53] = 0.1352;
//	iapp_i[54] = -0.21813;
//	iapp_i[55] = 0.038597;
//	iapp_i[56] = 0.19516;
//	iapp_i[57] = -0.00088399;
//	iapp_i[58] = 0.035801;
//	iapp_i[59] = -0.054817;
//	iapp_i[60] = -0.37607;
//	iapp_i[61] = -0.0096427;
//	iapp_i[62] = 0.353;
//	iapp_i[63] = 0.37393;
//	iapp_i[64] = -0.22971;
//	iapp_i[65] = -0.29154;
//	iapp_i[66] = 0.06498;
//	iapp_i[67] = 0.14031;
//	iapp_i[68] = -0.082971;
//	iapp_i[69] = -0.29402;
//	iapp_i[70] = 0.44793;
//	iapp_i[71] = -0.41793;
//	iapp_i[72] = -0.39429;
//	iapp_i[73] = -0.35796;
//	iapp_i[74] = -0.33354;
//	iapp_i[75] = 0.12096;
//	iapp_i[76] = 0.07371;
//	iapp_i[77] = -0.44792;
//	iapp_i[78] = 0.4312;
//	iapp_i[79] = 0.22866;
//	iapp_i[80] = 0.23784;
//	iapp_i[81] = -0.4366;
//	iapp_i[82] = 0.36044;
//	iapp_i[83] = 0.43441;
//	iapp_i[84] = 0.4844;
//	iapp_i[85] = 0.35894;
//	iapp_i[86] = 0.28556;
//	iapp_i[87] = 0.013377;
//	iapp_i[88] = -0.3224;
//	iapp_i[89] = -0.10141;
//	iapp_i[90] = -0.36607;
//	iapp_i[91] = -0.46911;
//	iapp_i[92] = 0.43914;
//	iapp_i[93] = -0.19869;
//	iapp_i[94] = -0.20447;
//	iapp_i[95] = -0.16706;
//	iapp_i[96] = -0.032932;
//	iapp_i[97] = 0.1482;
//	iapp_i[98] = -0.47477;
//	iapp_i[99] = 0.34221;

}
